version: '3.8'

services:
  # Frontend Service
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_BASE_URL=http://localhost:5004/api
      - REACT_APP_ANALYSIS_API_URL=http://localhost:5003/api
      - REACT_APP_PROCESSING_API_URL=http://localhost:5002/api
      - REACT_APP_INGESTION_API_URL=http://localhost:5001/api
    depends_on:
      - data-visualization
      - data-analysis
      - data-processing
      - data-ingestion
    networks:
      - das-network

  # Base image build
  base:
    build:
      context: ./services
      dockerfile: Dockerfile.base
    image: das-financial-analysis-base:latest

  # Data Ingestion Service
  data-ingestion:
    build:
      context: ./services/data-ingestion
      dockerfile: Dockerfile
    ports:
      - "5001:5001"
    environment:
      - CASSANDRA_HOST=cassandra
      - KAFKA_HOST=kafka:29092
      - AlphaFree=${AlphaFree}
    depends_on:
      - cassandra
      - kafka
      - base
    networks:
      - das-network

  # Data Processing Service
  data-processing:
    build:
      context: ./services/data-processing
      dockerfile: Dockerfile
    ports:
      - "5002:5002"
    environment:
      - CASSANDRA_HOST=cassandra
      - KAFKA_HOST=kafka:29092
    depends_on:
      - cassandra
      - kafka
      - base
    networks:
      - das-network

  # Data Analysis Service
  data-analysis:
    build:
      context: ./services/data-analysis
      dockerfile: Dockerfile
    ports:
      - "5003:5003"
    environment:
      - CASSANDRA_HOST=cassandra
    depends_on:
      - cassandra
      - base
    networks:
      - das-network

  # Data Visualization Service
  data-visualization:
    build:
      context: ./services/data-visualization
      dockerfile: Dockerfile
    ports:
      - "5004:5004"
    environment:
      - CASSANDRA_HOST=cassandra
    depends_on:
      - cassandra
      - base
    networks:
      - das-network

  # Kafka Service
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - das-network

  # Zookeeper Service
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - das-network

  # Cassandra Service
  cassandra:
    image: cassandra:4.1
    ports:
      - "9042:9042"
    volumes:
      - cassandra_data:/var/lib/cassandra
      - ./services/cassandra/init:/docker-entrypoint-initdb.d
    environment:
      - CASSANDRA_USER=cassandra
      - CASSANDRA_PASSWORD=cassandra
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'SHOW VERSION'"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - das-network

networks:
  das-network:
    driver: bridge

volumes:
  cassandra_data: 