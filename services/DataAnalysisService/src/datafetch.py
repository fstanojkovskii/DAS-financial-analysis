import psycopg2
import pandas as pd
from kafka import KafkaProducer
import json

# –ö–æ–Ω–µ–∫—Ü–∏—ò–∞ —Å–æ PostgreSQL
def get_data_from_postgres():
    conn = psycopg2.connect(
        dbname="financial_data",
        user="postgres",
        password="dimo",
        host="localhost",
        port="5432"
    )
    query = "SELECT * FROM stock_prices"
    df = pd.read_sql(query, conn)
    conn.close()
    return df

# –§—É–Ω–∫—Ü–∏—ò–∞ —à—Ç–æ –≥–æ –≤—Ä–∞—ú–∞ –Ω–∞—ò–Ω–æ–≤–∏–æ—Ç –¥–æ—Å—Ç–∞–ø–µ–Ω –¥–∞—Ç—É–º
def get_latest_date():
    conn = psycopg2.connect(
        dbname="financial_data",
        user="postgres",
        password="dimo",
        host="localhost",
        port="5432"
    )
    cursor = conn.cursor()
    cursor.execute("SELECT MAX(date) FROM stock_prices")  # –ù–∞—ò–Ω–æ–≤–∏–æ—Ç –¥–∞—Ç—É–º
    latest_date = cursor.fetchone()[0]  # –ó–µ–º–∞—ö–µ –Ω–∞ —Ä–µ–∑—É–ª—Ç–∞—Ç–æ—Ç
    conn.close()
    return latest_date

# –ö–æ–Ω–µ–∫—Ü–∏—ò–∞ —Å–æ Kafka
def send_to_kafka(topic, message):
    producer = KafkaProducer(
        bootstrap_servers="localhost:9092",
        value_serializer=lambda m: json.dumps(m).encode("utf-8")
    )
    producer.send(topic, message)
    producer.flush()
    producer.close()

def main():
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ –∫–æ—ò –¥–∞—Ç—É–º —Å–µ –¥–æ—Å—Ç–∞–ø–Ω–∏ –ø–æ–¥–∞—Ç–æ—Ü–∏—Ç–µ
    latest_date = get_latest_date()
    print(f"üìÖ Latest available data: {latest_date}")

    # –ò–∑–≤–ª–µ–∫—É–≤–∞–º–µ –ø–æ–¥–∞—Ç–æ—Ü–∏ –æ–¥ PostgreSQL
    data = get_data_from_postgres()

    # –ò—Å–ø—Ä–∞—ú–∞—ö–µ –Ω–∞ –ø–æ–¥–∞—Ç–æ—Ü–∏ –≤–æ Kafka –∑–∞ –∞–Ω–∞–ª–∏–∑–∞
    for idx, row in data.iterrows():
        kafka_message = {
            "symbol": row['symbol'],
            "date": row['date'].strftime('%Y-%m-%d'),  # –ö–æ–Ω–≤–µ—Ä–∑–∏—ò–∞ –Ω–∞ –¥–∞—Ç—É–º –≤–æ —Å—Ç—Ä–∏–Ω–≥
            "open": row['open'],
            "high": row['high'],
            "low": row['low'],
            "close": row['close'],
            "volume": row['volume']
        }
        send_to_kafka('stock-data-topic', kafka_message)
        print(f"‚úÖ Sent data for {row['symbol']} on {row['date']}")

if __name__ == "__main__":
    main()
